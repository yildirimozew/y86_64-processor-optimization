.pos 0x0
init:
    irmovq stack, %rsp
    irmovq array_begin1, %rdi
    irmovq array_end1, %rsi
    irmovq array_begin2, %rdx
    irmovq array_end2, %rcx
    irmovq array_begin3, %r8
    call merge
    halt


merge:
loop1:
    irmovq $8, %r10
    pushq %rdi 
    subq %rsi, %rdi
    popq %rdi
    jge loop2
    pushq %rdx 
    subq %rcx, %rdx
    popq %rdx
    jge loop2
    mrmovq 0(%rdi), %r11
    mrmovq 0(%rdx), %r12
    pushq %r11 
    subq %r12, %r11 
    popq %r11
    jge loop1_2
    rmmovq %r11, 0(%r8)
    addq %r10, %rdi
    addq %r10, %r8
    jmp loop1
loop1_2:
    rmmovq %r12, 0(%r8)
    addq %r10, %rdx
    addq %r10, %r8
    jmp loop1
loop2:
    mrmovq 0(%rdi), %r11
    pushq %rdi 
    subq %rsi, %rdi
    popq %rdi
    jge loop3
    rmmovq %r11, 0(%r8)
    addq %r10, %rdi
    addq %r10, %r8
    jmp loop2
loop3:
    mrmovq 0(%rdx), %r12
    pushq %rdx 
    subq %rcx, %rdx
    popq %rdx
    jge end
    rmmovq %r12, 0(%r8)
    addq %r10, %rdx
    addq %r10, %r8
    jmp loop3
end:
    ret




.pos 0x1008
array_begin1:
.quad 101
.quad 107
.quad 109
.quad 116
.quad 131
.quad 143
.quad 146
.quad 161
.quad 162
.quad 167
.quad 168
.quad 172
.quad 178
.quad 194
.quad 199
array_end1:
.quad 0
array_begin2:
.quad 102
.quad 114
.quad 118
.quad 120
.quad 136
.quad 140
.quad 148
.quad 158
.quad 166
.quad 170
.quad 175
.quad 176
.quad 184
.quad 190
.quad 197
array_end2:
.quad 0

.pos 0x1300
array_begin3:
.quad 0
.pos 0x1F00
stack:
.quad 0

