.pos 0x0
init:
    irmovq stack, %rsp
    irmovq array_begin1, %rdi
    irmovq array_end1, %rsi
    irmovq array_begin2, %rdx
    irmovq array_end2, %rcx
    irmovq array_begin3, %r8
    call merge
    halt


merge:
loop1:
    irmovq $8, %r10
    pushq %rdi 
    subq %rsi, %rdi
    popq %rdi
    jge loop2
    pushq %rdx 
    subq %rcx, %rdx
    popq %rdx
    jge loop2
    mrmovq 0(%rdi), %r11
    mrmovq 0(%rdx), %r12
    pushq %r11 
    subq %r12, %r11 
    popq %r11
    jge loop1_2
    rmmovq %r11, 0(%r8)
    addq %r10, %rdi
    addq %r10, %r8
    jmp loop1
loop1_2:
    rmmovq %r12, 0(%r8)
    addq %r10, %rdx
    addq %r10, %r8
    jmp loop1
loop2:
    mrmovq 0(%rdi), %r11
    pushq %rdi 
    subq %rsi, %rdi
    popq %rdi
    jge loop3
    rmmovq %r11, 0(%r8)
    addq %r10, %rdi
    addq %r10, %r8
    jmp loop2
loop3:
    mrmovq 0(%rdx), %r12
    pushq %rdx 
    subq %rcx, %rdx
    popq %rdx
    jge end
    rmmovq %r12, 0(%r8)
    addq %r10, %rdx
    addq %r10, %r8
    jmp loop3
end:
    ret




.pos 0x1008
array_begin1:
.quad 106
.quad 111
.quad 117
.quad 136
.quad 163
.quad 172
.quad 175
.quad 177
.quad 178
.quad 193
array_end1:
.quad 0
array_begin2:
.quad 105
.quad 110
.quad 126
.quad 137
.quad 139
.quad 152
.quad 154
.quad 157
.quad 195
.quad 197
array_end2:
.quad 0

.pos 0x1300
array_begin3:
.quad 0
.pos 0x1F00
stack:
.quad 0

